//To-Do LIst app
//create a class for tasks
class Task (newTaskName: String?, newDeadline: String?) {
    var taskName =newTaskName
    var deadline =newDeadline
}

//To display the task list
fun display(toDoList: MutableList<Task>) {
    println()

    if (toDoList.isNullOrEmpty()) {
        println("To-Do list is empty. Add some new tasks!")
    }
    else {
        println("Here are the tasks in your To-Do List:")

        for (task in toDoList) {
            println("Task: " + task?.taskName + ", Deadline: " + task?.deadline)
        }
    }
}

//To Add new tasks
fun add(toDoList: MutableList<Task>) {
    println()
    var newTaskName: String?

    do {
        var checkRepeatAndError = false
        print("Which task do you want to add?")
        newTaskName = readlnOrNull()

        for (task in toDoList) {
            if (task.taskName == newTaskName) {
                println("The task '$newTaskName' already exists in the to-do list. Please enter a new task.")
                checkRepeatAndError = true
                break
            }
        }

        if (newTaskName == "null" || newTaskName == "") {
            println("null or empty is not a valid task name Please enter a new task.")
            checkRepeatAndError = true
        }

    }while (checkRepeatAndError)

    print("When is the deadline for this task? ")
    val deadline: String? = readlnOrNull()

    val newTask = Task(newTaskName, deadline)
    toDoList.add(newTask)
    println("Congratulations! you have added the task '$newTaskName' successfully to your list!")
}

//To remove already existing tasks
fun remove(toDoList: MutableList<Task>) {
    println()
    print("Which task do you want to remove? ")
    val removeTask = readlnOrNull()
    var matchedTask: Task? = null

    for (task in toDoList) {
        if (task.taskName == removeTask) {
            matchedTask = task
            println("The task '$removeTask' was removed from the to-do list!")
        }
    }

    if (matchedTask == null) {
        println("The task '$removeTask' was not found in the to-do list!")
    }else {
        toDoList.remove(matchedTask)
    }
}
fun playAgain(): Boolean {
    println()
    var doubleCheck:String?

    do {
        print(" Do yor want to quit the app ()Yes/No")
        doubleCheck = readlnOrNull()
    }while (doubleCheck != "Yes" && doubleCheck != "No")

    return doubleCheck != "Yes"
}

//main function
fun main() {
    val task1 = Task("Task 1", "Deadline")
    val task2 = Task("Task 2", "Deadline")
    val toDoList: MutableList<Task> = mutableListOf(task1, task2)

    do{
        var isPlayAgain = true
        println()
        println("Welcome")
        println("1: Display To-Do List")
        println("2: Add to your list")
        println("3: Remove from your list")
        println("0: Quit App")
        print("Please choose an option from the menu: ")
        val userChoice = readlnOrNull()

        when (userChoice) {
            "1" -> display(toDoList)
            "2" -> add(toDoList)
            "3" -> remove(toDoList)
            "0" -> isPlayAgain = playAgain()
            else -> println("Invalid option.")
        }
    }while (isPlayAgain)

    println("Thank you!")
}
